name: Publish API Docs to GitBook
on:
  push:
    branches: [main]
    paths:
      - 'openapi/**'
  pull_request:
    paths:
      - 'openapi/**'

jobs:
  validate-bundle-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'yarn'
      
      - name: Install dependencies
        run: yarn install
      
      - name: Validate API spec with project config
        run: yarn test:api
      
      - name: Bundle API spec
        run: |
          npx @redocly/cli bundle openapi/catalyst.yaml -o bundled-openapi.yaml
          echo "‚úÖ Bundled spec created"
          ls -lh bundled-openapi.yaml
      
      - name: Upload bundled spec as artifact
        uses: actions/upload-artifact@v3
        with:
          name: openapi-spec
          path: bundled-openapi.yaml
          retention-days: 30
      
      - name: Sync to GitBook
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GITBOOK_TOKEN: ${{ secrets.GITBOOK_TOKEN }}
          GITBOOK_SPACE_ID: ${{ secrets.GITBOOK_SPACE_ID }}
        run: |
          if [ -z "$GITBOOK_TOKEN" ] || [ -z "$GITBOOK_SPACE_ID" ]; then
            echo "‚ö†Ô∏è  GitBook secrets not configured. Skipping GitBook sync."
            echo "‚úÖ Validation and bundling completed successfully."
            echo "üì¶ Bundled spec available as workflow artifact."
            exit 0
          fi
          
          echo "üìö Publishing to GitBook..."
          
          # Upload the bundled spec directly to GitBook
          RESPONSE=$(curl -X POST "https://api.gitbook.com/v1/spaces/${GITBOOK_SPACE_ID}/content/import" \
            -H "Authorization: Bearer ${GITBOOK_TOKEN}" \
            -H "Content-Type: application/json" \
            -d @- << EOF
{
  "type": "openapi",
  "content": $(cat bundled-openapi.yaml | jq -Rs .)
}
EOF
          )
          
          if [ $? -eq 0 ]; then
            echo "‚úÖ Successfully published to GitBook!"
            echo "$RESPONSE"
          else
            echo "‚ö†Ô∏è  GitBook sync failed. Response:"
            echo "$RESPONSE"
            echo ""
            echo "Alternative: Use GitBook GitHub integration"
            echo "  1. In GitBook, go to Integrations"
            echo "  2. Connect your GitHub repository"
            echo "  3. Point to the bundled spec artifact"
            exit 1
          fi

