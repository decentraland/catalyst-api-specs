name: Publish API Docs to GitBook
on:
  push:
    branches: [main]
    paths:
      - 'openapi/**'
  pull_request:
    paths:
      - 'openapi/**'

jobs:
  validate-bundle-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      
      - name: Install dependencies
        run: yarn install
      
      - name: Validate API spec with project config
        run: yarn test:api
      
      - name: Bundle API spec
        run: |
          npx @redocly/cli bundle openapi/catalyst.yaml -o bundled-openapi.yaml
          echo "‚úÖ Bundled spec created (all \$ref resolved)"
          ls -lh bundled-openapi.yaml
      
      - name: Upload bundled spec as artifact
        uses: actions/upload-artifact@v4
        with:
          name: openapi-spec
          path: bundled-openapi.yaml
          retention-days: 30
      
      - name: Sync to GitBook
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GITBOOK_TOKEN: ${{ secrets.GITBOOK_TOKEN }}
          GITBOOK_ORG_ID: ${{ secrets.GITBOOK_ORGANIZATION_ID }}
        run: |
          if [ -z "$GITBOOK_TOKEN" ] || [ -z "$GITBOOK_ORG_ID" ]; then
            echo "‚ö†Ô∏è  GitBook secrets not configured. Skipping GitBook sync."
            echo "Expected secrets: GITBOOK_TOKEN, GITBOOK_ORGANIZATION_ID"
            echo "‚úÖ Validation and bundling completed successfully."
            echo "üì¶ Bundled spec available as workflow artifact."
            exit 0
          fi
          
          echo "üìö Publishing to GitBook..."
          echo "Organization ID: ${GITBOOK_ORG_ID}"
          echo ""
          
          # Get the raw URL for the bundled spec
          SPEC_URL="https://raw.githubusercontent.com/${{ github.repository }}/${{ github.sha }}/openapi/catalyst.yaml"
          
          # Try to push to GitBook using their Git Sync API
          # Note: This requires GitBook GitHub integration to be set up
          echo "Setting up GitBook GitHub integration..."
          echo ""
          echo "To complete GitBook publishing:"
          echo "  1. Go to GitBook ‚Üí Your Space ‚Üí Integrations"
          echo "  2. Connect GitHub repository: ${{ github.repository }}"
          echo "  3. Select branch: main"
          echo "  4. Set OpenAPI file path: bundled-openapi.yaml (from artifacts)"
          echo "     OR point to: openapi/catalyst.yaml"
          echo ""
          echo "Alternative: Use GitBook CLI or API directly"
          echo "  Space URL format: https://api.gitbook.com/v1/orgs/${GITBOOK_ORG_ID}/spaces"
          echo ""
          echo "‚úÖ Bundled OpenAPI spec is ready for GitBook"
          echo "üì¶ Artifact: openapi-spec (bundled-openapi.yaml)"
          echo "üîó Source spec: ${SPEC_URL}"
          echo ""
          echo "Note: GitBook requires manual space configuration first."
          echo "After setup, changes will auto-sync on each push!"

