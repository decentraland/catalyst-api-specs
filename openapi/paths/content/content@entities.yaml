post:
  operationId: postEntity
  summary: Deploys an entity
  tags:
    - Content Server
  description: >-
    Deploys an entity in the content server. This request must contain a file with the entity itself and
    also the files associated with it, such as 3D models, as well as information about the entity and requester.
    This request will succeed only if the hash of the entity file matches the entityId and also
    if the signature is valid has the correct permission to modify the pointers associated with it.
  requestBody:
    content:
      multipart/form-data:
        schema:
          type: object
          properties:
            files:
              type: array
              items:
                type: string
                format: binary
            entityId:
              type: string
              example: QmY4GFuf2jR3ocfuXuFLgvUrGEpjo84Byg44Pv2wduuinW
            authChain:
              type: string
              example:
                $ref: ../../components/examples/content/auth-chain.json
            ethAddress:
              type: string
              example: '0x89205A3A3b2A69De6Dbf7f01ED13B2108B2c43e7'
            signature:
              type: string
  responses:
    '200':
      description: >-
        Entity created successfully. The response will contain the timestamp and
        result.
      content:
        application/json; charset=utf-8:
          schema:
            type: object
            required: ['creationTimestamp']
            properties:
              creationTimestamp:
                type: number
          example:
            creationTimestamp: 1628607669304
    '400':
      description: >-
        Bad request. Returns the error object with the list of errors from the
        server response.
      content:
        application/json; charset=utf-8:
          schema:
            oneOf:
              - $ref: '../../components/schemas/content/error.yaml'
              - $ref: '../../components/schemas/content/errors.yaml'
