openapi: 3.0.3
info:
  title: API Specification for the Decentraland Catalyst Server (BETA)
  version: '1.0'
  description: 'A Catalyst is a Server that runs different services. These services currently work as the backbone for Decentraland and work in a decentralized network. The current specification details the following services: <br/><br/>- Archipelago <br/>- Content Server <br/>- Lambdas Service <br/> <br/>WARNING: We are working to close the version 1.0 of the Catalyst Protocol defined by this API. So far this is what we have and it''s public but we are still working on refinement and during this process we may decided to deprecate or change some of the endpoints.'
  x-logo:
    url: https://cryptologos.cc/logos/decentraland-mana-logo.png
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://peer.decentraland.zone
    description: Catalyst Development instance
  - url: https://peer-testing.decentraland.org
    description: Catalyst Staging instance
  - url: https://peer.decentraland.org
    description: First production Catalyst node
tags:
  - name: Global
    description: Endpoints that are about the whole catalyst or about shared services
  - name: Content Server
    description: Decentraland is a virtual world that is owned by its users. One of the biggest differentiators about Decentraland is its level of decentralization. Users can own LAND, wearables, and probably other types of items in the future. Each of these items is an NFT in itself, and therefore ownership is determined by the Ethereum (or EVM-compatible) blockchain. <br/><br/>Now, when a new wearable is created, or when a user uploads a scene to their LAND/parcel, all necessary files (3d models, textures, music, etc) are uploaded to a "content server". Why are we using these servers instead of the blockchain? Mainly because it would be prohibitively expensive to store files as big as 3d models in the blockchain. Users would have to pay fees so high to upload content to their parcels that nobody would do it. <br/><br/>So this is where content servers come into play. The content server is mainly a server where users can upload these files we mentioned before. Each server will verify against the blockchain that the user making the upload is actually allowed to do so. For example, in the case of scenes, the server will check that the deployer owns all the parcels they are trying to modify. <br/><br/>And the most important part is that all content servers will then sync with each other. So, for example, if a scene is modified in one server, the update itself will be broadcasted to the other ones. Then, in the case a content server goes down for some reason, all content will still be present in the other ones.
  - name: Archipelago
    description: This service is in charge of clustering users according to their position and assigning a connection string that will allow the user to connect to an specifig transport.
  - name: Lambdas
    description: This service provides a set of utilities required by the Catalyst Server Clients\Consumers in order to retrieve or validate data.
paths:
  /about:
    get:
      operationId: getAboutCatalystInfo
      summary: Catalyst Server Configs and health
      tags:
        - Global
      description: Retrieve detailed information about the services health and its configuration
      responses:
        '200':
          description: Catalyst services health information
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/about'
              examples:
                default:
                  $ref: '#/components/examples/200-about'
        '503':
          description: Service Unavailable - Some catalyst service is not Healthy
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/about'
              examples:
                default:
                  $ref: '#/components/examples/503-about'
  /stats/parcels:
    get:
      operationId: getStatsParcels
      summary: The stats from all parcels
      tags:
        - Global
      description: Retrieves the amount of users on each parcel
      responses:
        '200':
          description: Parcels with peers connected to
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/stats-parcels'
              examples:
                default:
                  $ref: '#/components/examples/200-stats-parcels'
  /content/audit/{entityType}/{entityId}:
    get:
      operationId: getEntityAuditInformation
      summary: Get information about an entity
      tags:
        - Content Server
      parameters:
        - in: path
          name: entityType
          required: true
          schema:
            type: string
            enum:
              - profile
              - scene
              - wearable
            example: profile
          description: Specify the type of entity to audit
        - in: path
          name: entityId
          required: true
          schema:
            type: string
            example: QmQgezF4UWTZpD5VqKs2AGCzucRJdm8zU87MxdSRH9heZR
          description: id of the entity
      description: Get information about an entity, such us Scenes Profiles or Wearables, with the specified entityId.
      security: []
      responses:
        '200':
          description: Entity version, AuthChain and if the deployment was overwritten
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/audit-response'
              examples:
                default:
                  $ref: '#/components/examples/200-audit-response'
        '400':
          description: Unrecognized Entity type
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error'
              example:
                error: 'Unrecognized type: Houses'
        '404':
          description: Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error'
              example: Not Found
  /content/challenge:
    get:
      operationId: getChallenge
      summary: Validate if the Server is part of the DAO
      tags:
        - Content Server
      description: Used by the Server to figure out their identity on the DAO by themselves, so they will generate a random challenge text, and then query each server for it. If the text matches, then they have found themselves.
      responses:
        '200':
          description: Challenge text
          content:
            application/json; charset=utf-8:
              schema:
                required:
                  - challengeText
                type: object
                properties:
                  challengeText:
                    type: string
              example:
                challengeText: 186a1c51-2c4c-4dae-913c-b87670600c56
  /content/contents/{hashId}:
    get:
      operationId: getContentFile
      summary: Download content file
      tags:
        - Content Server
      description: Download the binary file associated with the specified hashId
      parameters:
        - in: path
          name: hashId
          required: true
          schema:
            type: string
            example: QmVzr55TyXcrbQUWBN6rf7K7zkZsTFnBK19LvgYM9CxFbu
          description: Hash of the file to be retrieved, you can search for the hashId in the content section of a deployment. If the entity version greater than or equal to v4,  then the hashing algorithm will be IPFS, if the entity version is v3 or below then  it will be SHA-256
      responses:
        '200':
          description: Binary file with the specified hashId
          headers:
            ETag:
              schema:
                type: string
                example: QmVzr55TyXcrbQUWBN6rf7K7zkZsTFnBK19LvgYM9CxFbu
              description: Double-quoted string with the hashId
            Access-Control-Expose-Headers:
              schema:
                type: string
                example: ETag
              description: Which headers can be exposed as part of the response
            Cache-Control:
              schema:
                type: string
                example: public,max-age=31536000,immutable
              description: Rules for caching in the request/response
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: binary
        '404':
          description: File with the specified hashId Not Found
          content:
            application/json; charset=utf-8:
              schema:
                type: string
                example: Not Found
    head:
      operationId: headContentFile
      summary: Check if a content file exists
      tags:
        - Content Server
      description: Check if a content file exists
      parameters:
        - in: path
          name: hashId
          required: true
          schema:
            type: string
            example: QmVzr55TyXcrbQUWBN6rf7K7zkZsTFnBK19LvgYM9CxFbu
          description: Hash of the file to be checked
      responses:
        '200':
          description: Content file exists
          headers:
            ETag:
              schema:
                type: string
                example: QmVzr55TyXcrbQUWBN6rf7K7zkZsTFnBK19LvgYM9CxFbu
              description: Double-quoted string with the hashId
            Access-Control-Expose-Headers:
              schema:
                type: string
                example: ETag
              description: Which headers can be exposed as part of the response
            Cache-Control:
              schema:
                type: string
                example: public,max-age=31536000,immutable
              description: Rules for caching in the request/response
        '404':
          description: File with the specified hashId Not Found
          content:
            application/json; charset=utf-8:
              schema:
                type: string
                example: Not Found
  /content/contents/{hashId}/active-entities:
    get:
      operationId: getEntityIdsByHashId
      summary: List of entityIds associated with a hashId
      tags:
        - Content Server
      description: Get the list of entity ids whose deployments are associated with the specified content hash. This endpoint is currently intended for troubleshooting as there is no specific use case for it.
      parameters:
        - in: path
          name: hashId
          required: true
          schema:
            type: string
            example: QmWFLwHGfvhB9a1epaRpS38HEwbHvhpaYzHEsNhDRgon7P
          description: Hash of the content file
      responses:
        '200':
          description: List of all the entities associated with the hashId
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  type: string
              example:
                - QmY4GFuf2jR3ocfuXuFLgvUrGEpjo84Byg44Pv2wduuinW
                - QmZbAEFPF7LSq9xVZTCAZoHPNV1QX7YiSbKL2g881MJLj8
        '404':
          description: Entities not found for the specified hash
          content:
            application/json; charset=utf-8:
              schema:
                required:
                  - error
                type: object
                properties:
                  error:
                    type: string
              example:
                error: The entity was not found
  /content/available-content:
    get:
      operationId: getAvailableContent
      summary: Validates if file exists on the Server
      tags:
        - Content Server
      description: Given a list of hashes, validates if the corresponding files exist in the storage of the server
      parameters:
        - in: query
          name: cid
          required: true
          schema:
            type: array
            items:
              type: string
              example: QmWFLwHGfvhB9a1epaRpS38HEwbHvhpaYzHEsNhDRgon7P
          description: Hash of the content file
      responses:
        '200':
          description: List of objects with the hasIds and a boolean value specifying 'true' if the files exists on the server and 'false' if it doesn't.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/available-content'
              examples:
                default:
                  $ref: '#/components/examples/200-available-content'
        '400':
          description: Missing query parameters in the request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error'
  /content/entities:
    post:
      operationId: postEntity
      summary: Deploys an entity
      tags:
        - Content Server
      description: Deploys an entity in the content server. This request must contain a file with the entity itself and also the files associated with it, such as 3D models, as well as information about the entity and requester. This request will succeed only if the hash of the entity file matches the entityId and also if the signature is valid has the correct permission to modify the pointers associated with it.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                entityId:
                  type: string
                  example: QmY4GFuf2jR3ocfuXuFLgvUrGEpjo84Byg44Pv2wduuinW
                authChain:
                  type: string
                  example:
                    - type: SIGNER
                      payload: '0x716954738e57686a08902d9dd586e813490fee23'
                    - type: ECDSA_EPHEMERAL
                      payload: |-
                        Decentraland Login
                        Ephemeral address: 0x90a43461d3e970785B945FFe8f7628F2BC962D6a
                        Expiration: 2021-07-10T20:55:42.215Z
                      signature: '0xe64e46fdd7d8789c0debec54422ae77e31b77e5a28287e072998e1114e252c57328c17756400d321e9e77032347c9d05e63fb59a3b6c3ab754565f9db86b8c481b'
                    - type: ECDSA_SIGNED_ENTITY
                      payload: QmNMZBy7khBxdigikA8mcJMyv6yeBXfMv3iAcUiBr6n72C
                      signature: '0xbed22719dcdc19580353108027c41c65863404879592c65014d806efa961c629777adc76986193eaee4e48f278ec59feb1c289827254230af85b2955157ec8061b'
                ethAddress:
                  type: string
                  example: '0x89205A3A3b2A69De6Dbf7f01ED13B2108B2c43e7'
                signature:
                  type: string
      responses:
        '200':
          description: Entity created successfully. The response will contain the timestamp and result.
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - creationTimestamp
                properties:
                  creationTimestamp:
                    type: number
              example:
                creationTimestamp: 1628607669304
        '400':
          description: Bad request. Returns the error object with the list of errors from the server response.
          content:
            application/json; charset=utf-8:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/error'
                  - $ref: '#/components/schemas/errors'
  /content/entities/active/collections/{collectionUrn}:
    get:
      operationId: getEntitiesByPointerPrefix
      summary: List of active entities matching urn prefix
      tags:
        - Content Server
      description: Returns the list of active entities which have at least one pointer that matches the prefix given
      parameters:
        - in: path
          name: collectionUrn
          required: true
          schema:
            type: string
            example: urn:decentraland:matic:collections-v2:0x8e674db9b2fc0759b2d94cace9c4bae334a8f0c3
          description: urn prefix to filter the entities by
        - in: query
          name: pageSize
          required: false
          schema:
            type: number
          description: Page size (max 1000)
        - in: query
          name: pageNumber
          required: false
          schema:
            type: number
          description: 'Page number (default: 1)'
      responses:
        '200':
          description: List of entity Ids matching the condition
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - total
                  - entities
                properties:
                  total:
                    type: number
                  entities:
                    type: array
                    items:
                      $ref: '#/components/schemas/entity'
              examples:
                default:
                  $ref: '#/components/examples/200-active-collections'
  /content/entities/active:
    post:
      operationId: getActiveEntities
      summary: List active entities by pointers or ids
      tags:
        - Content Server
      description: Returns the list of entities of the specified type with the specified id or pointers. Only one of these filters must be specified in the body.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pointers:
                  description: Entities must be filtered by pointer XOR entityId (ids). Use this parameter if you want to retrieve an entity of the specified type with this pointer.
                  type: array
                  items:
                    type: string
                    example: urn:decentraland:mumbai:collections-v2:0xf6426e0c70c17509038aba78137e721d187499d6:0
                ids:
                  description: Entities must be filtered by pointer (pointers) XOR entityId. Use this parameter if you want to retrieve an entity of the specified type with this entityId.
                  type: array
                  items:
                    type: string
                    example: QmeA8RpAtqU6gCebNaWRXtM9nQs3ugzzbeQm3L7uKrP4Jp
      responses:
        '200':
          description: List of entities corresponding to the matching ids or pointers.
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/entity'
              examples:
                default:
                  $ref: '#/components/examples/200-entities-active'
        '400':
          description: 'Bad request: ids or pointers must be present in the request, but not both'
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                default:
                  value:
                    error: ids or pointers must be present in the request, but not both
  /content/failed-deployments:
    get:
      operationId: getFailedDeployments
      summary: List of failed deployments
      description: Retrieves a list of the failed deployments
      tags:
        - Content Server
      responses:
        '200':
          description: Failed deployments list
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/failed-deployments'
              examples:
                default:
                  $ref: '#/components/examples/200-failed-deployments'
  /content/pointer-changes:
    get:
      operationId: getPointerChanges
      summary: List of changes made to a pointer
      tags:
        - Content Server
      description: List of all deltas from the deployments inside the filters that affect the given pointers. It returns a list of changes with the `before` field (the entity that was overridden with this deployment) and `after` (the entity that overrides the current one if present).
      parameters:
        - in: query
          name: from
          allowEmptyValue: true
          schema:
            type: integer
            example: 1606829553969
          description: Acts as a filter in the collection of deployments, this value is the minimum value of local timestamp that any deployment in the collection will have.
        - in: query
          name: to
          allowEmptyValue: true
          schema:
            type: integer
            example: 1606829553969
          description: Acts as a filter in the collection of deployments, this value is the maximum value of local timestamp that any deployment in the collection will have.
        - in: query
          name: lastId
          allowEmptyValue: true
          schema:
            type: string
            example: QmNknKv8MuKbfZ73z4QdUEsNbTd1ZAN1fSuwTFGiNGeCt5
          description: It is the last entity id that was visited, so it will be skipped when showing current page.
        - in: query
          name: limit
          allowEmptyValue: true
          schema:
            type: integer
            example: 100
          description: The deployments are a paginated collection, this parameter corresponds to the limit for each page. The default value is 500.
        - in: query
          name: entityType
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - scene
              - profile
              - wearable
            example: profile
          description: 'The type of entities that will be shown in the collection, many values can be sent. Valid values are: profile, scene and wearable.'
        - in: query
          name: sortingField
          schema:
            type: string
            enum:
              - local_timestamp
              - entity_timestamp
            example: local_timestamp
          description: This value is used as the field to order all the deployments in the collection. If no parameter is sent, then the default field to order with will be local_timestamp.
        - in: query
          name: sortingOrder
          schema:
            type: string
            enum:
              - ASC
              - DESC
            example: ASC
          description: This value is used as the order for all the deployments in the collection. If no parameter is sent, then the default field to order with will be DESC.
      responses:
        '200':
          description: List of deployment changes made to pointers
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/pointer-changes'
              examples:
                default:
                  $ref: '#/components/examples/200-pointer-changes'
        '400':
          description: Bad Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                entityType:
                  summary: EntityType not recognized
                  value:
                    error: Found an unrecognized entity type
                offset:
                  summary: Wrong offset value
                  value:
                    error: Offset can't be higher than 5000. Please use the 'next' property for pagination.
  /content/snapshots:
    get:
      operationId: getSnapshots
      summary: Snapshots with a list of active entities
      tags:
        - Content Server
      description: Lists all active deployments stored in the database in multiple snapshots for different time ranges. If the information needed is front in time of the most recent snapshot, you may use the `/content/pointer-changes` endpoint with the necessary `from` filter.
      responses:
        '200':
          description: The result is a list of snapshots. Each "hash" field references the a snapshot with all the active entities that has an entity timestamp within the specified time range. Each hash is a reference to a JSON file containing one line per entity in a JSON format. Once you get the hashes you can download them using the /content/contents/{hashId} endpoint.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/snapshots'
              examples:
                default:
                  $ref: '#/components/examples/200-snapshots'
        '503':
          description: New Snapshots not yet created
  /content/status:
    get:
      operationId: getContentStatus
      summary: Content Server status
      tags:
        - Content Server
      description: Retrieve deteailed information about the content server status
      responses:
        '200':
          description: Content Server status information
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/status-content'
              examples:
                default:
                  $ref: '#/components/examples/200-status-content'
  /lambdas/status:
    get:
      operationId: getLambdaStatus
      summary: Catalyst Server status
      tags:
        - Lambdas
      description: Retrieve detailed information about the services
      responses:
        '200':
          description: Catalyst services information
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/status-lambdas'
              examples:
                default:
                  $ref: '#/components/examples/200-status-lambdas'
  /lambdas/collections:
    get:
      operationId: getCollections
      summary: Get Collections
      tags:
        - Lambdas
      description: Retrieve the list of collections URNs
      responses:
        '200':
          description: Array of collections URNs and names
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  collections:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - name
                      properties:
                        id:
                          type: string
                        name:
                          type: string
              examples:
                default:
                  $ref: '#/components/examples/200-collections'
        '500':
          description: Internal Server Error
  /lambdas/collections/contents/{urn}/thumbnail:
    get:
      operationId: getThumbnail
      summary: Download thumbnail image
      tags:
        - Lambdas
      description: Downloads a thumbnail image for the specified urn
      parameters:
        - in: path
          name: urn
          required: true
          schema:
            type: string
            example: urn:decentraland:matic:collections-v2:0x04e43281f36e1f1bfae6f38bc276cb48fb8ac632:0
          description: Uniform Resource Name (URN) that identifies the asset
      responses:
        '200':
          description: Thumbnail image
          headers:
            ETag:
              schema:
                type: string
                example: QmVzr55TyXcrbQUWBN6rf7K7zkZsTFnBK19LvgYM9CxFbu
              description: Double-quoted string with the hashId
            Cache-Control:
              schema:
                type: string
                example: public,max-age=31536000,immutable
              description: Rules for caching in the request/response
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: binary
  /lambdas/collections/contents/{urn}/image:
    get:
      operationId: getImage
      summary: Download URN image
      tags:
        - Lambdas
      description: Downloads the image for the specified urn
      parameters:
        - in: path
          name: urn
          required: true
          schema:
            type: string
            example: urn:decentraland:matic:collections-v2:0x04e43281f36e1f1bfae6f38bc276cb48fb8ac632:0
          description: Uniform Resource Name (URN) that identifies the asset
      responses:
        '200':
          description: Resource image
          headers:
            ETag:
              schema:
                type: string
                example: QmVzr55TyXcrbQUWBN6rf7K7zkZsTFnBK19LvgYM9CxFbu
              description: Double-quoted string with the hashId
            Cache-Control:
              schema:
                type: string
                example: public,max-age=31536000,immutable
              description: Rules for caching in the request/response
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                example: binary
  /lambdas/collections/standard/erc721/{chainId}/{contract}/{option}/{emission}:
    get:
      operationId: getStandardErc721
      summary: Get ERC721 Entity
      tags:
        - Lambdas
      description: Retrieve ERC721/NFT Entity details
      parameters:
        - in: path
          name: chainId
          required: true
          schema:
            type: string
            example: 137
          description: |-
            Ethereum chain ID:
              ETHEREUM_MAINNET = 1
              ETHEREUM_RINKEBY = 4
              ETHEREUM_GOERLI = 5
              ETHEREUM_KOVAN = 42
              MATIC_MAINNET = 137
              MATIC_MUMBAI = 80001
        - in: path
          name: contract
          required: true
          schema:
            type: string
            example: '0x123db7844eaf7da11d88cf1754945bbd020742ef'
          description: Hash of the Contract. This will be used to build the URN that identifies the NFT.
        - in: path
          name: option
          required: true
          schema:
            type: string
            example: '3'
          description: Token Identifier
        - in: path
          name: emission
          required: true
          schema:
            type: string
            example: legendary
          description: 'Optional rarity description that will be return as part of the NFT description common: 100000 uncommon: 10000 rare: 5000 epic: 1000 legendary: 100 mythic: 10 unique: 1'
      responses:
        '200':
          description: Resource image
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/erc721'
              examples:
                default:
                  $ref: '#/components/examples/200-erc721'
        '400':
          description: 'Bad Request: invalid chain ID'
        '404':
          description: Entity Not Found
        '500':
          description: Internal Server Error
  /lambdas/users/{address}/wearables:
    get:
      operationId: getWearables
      summary: Get list of wearables for an address
      tags:
        - Lambdas
      description: Get a list of wearables owned by the given address
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
            example: '0xa87d168717538e86d71ac48baccaeb84162de602'
          description: Ethereum address from which you want to get the list of wearables
        - in: query
          name: includeEntities
          schema:
            type: boolean
            example: true
          description: If present, response will be extended with the entity data.
        - in: query
          name: includeThirdParty
          schema:
            type: boolean
            example: true
          description: If present, response will include the third-party wearables owned by the address. They will appear before other wearables if the response is paginated.
        - in: query
          name: pageNum
          schema:
            type: string
            example: '1'
          description: The number of the requested page.
        - in: query
          name: pageSize
          schema:
            type: string
            example: '10'
          description: The size of the requested page.
        - in: query
          name: orderBy
          schema:
            type: string
            example: rarity
          description: 'Determines the field to be sort by. By default it will be by `transferredAt`. Possible values: `transferredAt` and `rarity`.'
      responses:
        '200':
          description: List of wearables owned by the given address
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - elements
                  - pageNum
                  - pageSize
                  - totalAmount
                properties:
                  elements:
                    type: array
                    items:
                      $ref: '#/components/schemas/wearable'
                  totalAmount:
                    type: number
                  pageNum:
                    type: number
                  pageSize:
                    type: number
              examples:
                default:
                  $ref: '#/components/examples/200-wearables-paginated'
        '503':
          description: Failed to fetch wearables
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/lambdas-error'
  /lambdas/users/{address}/emotes:
    get:
      operationId: getEmotes
      summary: Get list of emotes for an address
      tags:
        - Lambdas
      description: Get a list of emotes owned by the given address
      parameters:
        - in: query
          name: collectionId
          schema:
            type: string
            example: urn:decentraland:matic:collections-thirdparty:ntr1-meta:ntr1-meta-1ef79e7b
          description: Third Party collection Id to filter emotes, if this param is not sent then the 3rd parties emotes are not shown. If it is sent, only the 3rd parties emotes are shown.
        - in: query
          name: includeEntities
          schema:
            type: boolean
            example: true
          description: If present, response will be extended with the entity data.
        - in: path
          name: address
          required: true
          schema:
            type: string
            example: '0xf4f7512c68f358856514cd4e449fc6c5ac04bb15'
          description: Ethereum address from which you want to get the list of emotes
        - in: query
          name: pageNum
          schema:
            type: string
            example: '1'
          description: The number of the requested page.
        - in: query
          name: pageSize
          schema:
            type: string
            example: '10'
          description: The size of the requested page
      responses:
        '200':
          description: List of emotes owned by the given address
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - elements
                  - totalAmount
                  - pageNum
                  - pageSize
                properties:
                  elements:
                    type: array
                    items:
                      $ref: '#/components/schemas/emote'
                  totalAmount:
                    type: number
                  pageNum:
                    type: number
                  pageSize:
                    type: number
              examples:
                default:
                  $ref: '#/components/examples/200-emotes-paginated'
        '500':
          description: Failed to fetch emotes for the address
  /lambdas/users/{address}/names:
    get:
      operationId: getNames
      summary: Get list of names for an address
      tags:
        - Lambdas
      description: Get a list of names owned by the given address
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
            example: '0xddf1eec586d8f8f0eb8c5a3bf51fb99379a55684'
          description: Ethereum address from which you want to get the list of names
        - in: query
          name: pageNum
          schema:
            type: string
            example: '1'
          description: The number of the requested page. It needs `pageSize` to be present to enable a paginated response.
        - in: query
          name: pageSize
          schema:
            type: string
            example: '10'
          description: The size of the requested page. It needs `pageNum` to be present to enable a paginated response.
      responses:
        '200':
          description: List of names owned by the given address
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/names-paginated'
              examples:
                default:
                  $ref: '#/components/examples/200-names-paginated'
        '500':
          description: Failed to fetch names for the address
  /lambdas/users/{address}/lands:
    get:
      operationId: getLands
      summary: Get list of lands for an address
      tags:
        - Lambdas
      description: Get a list of lands owned by the given address
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
            example: '0xddf1eec586d8f8f0eb8c5a3bf51fb99379a55684'
          description: Ethereum address from which you want to get the list of lands
        - in: query
          name: pageNum
          schema:
            type: string
            example: '1'
          description: The number of the requested page. It needs `pageSize` to be present to enable a paginated response.
        - in: query
          name: pageSize
          schema:
            type: string
            example: '10'
          description: The size of the requested page. It needs `pageNum` to be present to enable a paginated response.
      responses:
        '200':
          description: List of lands owned by the given address
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/lands-paginated'
              examples:
                default:
                  $ref: '#/components/examples/200-lands-paginated'
        '500':
          description: Failed to fetch lands for the address
  /lambdas/users/{address}/parcels/{x}/{y}/permissions:
    get:
      operationId: getParcelPermissions
      summary: Get the permissions for a parcel
      tags:
        - Lambdas
      description: Get the permissions a user has for a parcel
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
            example: '0xddf1eec586d8f8f0eb8c5a3bf51fb99379a55684'
          description: Ethereum address from which you want to get the permissions
        - in: path
          name: x
          required: true
          schema:
            type: string
            example: '100'
          description: X coordinate of the parcel
        - in: path
          name: 'y'
          required: true
          schema:
            type: string
            example: '100'
          description: Y coordinate of the parcel
      responses:
        '200':
          description: permissions a user has for a parcel
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/parcel-permissions'
              examples:
                default:
                  $ref: '#/components/examples/200-parcel-permissions'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                invalid-coordinates:
                  value:
                    error: Coordinates X and Y must be valid numbers in a valid range
                  summary: Invalid coordinate format or range
                invalid-address:
                  value:
                    error: Invalid Ethereum address
                  summary: Invalid Ethereum address format
  /lambdas/users/{address}/third-party-wearables:
    get:
      operationId: getThirdPartyWearables
      summary: Returns the list of third party wearables for the provided address
      tags:
        - Lambdas
      description: Returns the list of third party wearables for the provided address
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
            example: '0xf4f7512c68f358856514cd4e449fc6c5ac04bb15'
          description: Ethereum address from which you want to get the list of wearables
        - in: query
          name: pageNum
          schema:
            type: string
            example: '1'
          description: The number of the requested page.
        - in: query
          name: pageSize
          schema:
            type: string
            example: '10'
          description: The size of the requested page.
      responses:
        '200':
          description: Returns the list of third party wearables
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - elements
                  - totalAmount
                  - pageNum
                  - pageSize
                properties:
                  elements:
                    type: array
                    items:
                      $ref: '#/components/schemas/third-party-wearable'
                  totalAmount:
                    type: number
                  pageNum:
                    type: number
                  pageSize:
                    type: number
  /lambdas/users/{address}/third-party-wearables/{collectionId}:
    get:
      operationId: getThirdPartyCollection
      summary: Returns the list of third party wearables for the given collection
      tags:
        - Lambdas
      description: Returns the list of third party wearables for the given collection
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
            example: '0xf4f7512c68f358856514cd4e449fc6c5ac04bb15'
          description: Ethereum address from which you want to get the list of wearables
        - in: path
          name: collectionId
          required: true
          schema:
            type: string
            example: urn:decentraland:matic:collections-thirdparty:ntr1-meta:ntr1-meta-1ef79e7b
          description: Third Party collection Id to filter wearables.
        - in: query
          name: pageNum
          schema:
            type: string
            example: '1'
          description: The number of the requested page.
        - in: query
          name: pageSize
          schema:
            type: string
            example: '10'
          description: The size of the requested page.
      responses:
        '200':
          description: Returns the list of third party wearables
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - elements
                  - totalAmount
                  - pageNum
                  - pageSize
                properties:
                  elements:
                    type: array
                    items:
                      $ref: '#/components/schemas/third-party-wearable'
                  totalAmount:
                    type: number
                  pageNum:
                    type: number
                  pageSize:
                    type: number
  /lambdas/collections/wearables:
    get:
      deprecated: true
      operationId: searchWearables
      summary: Search Wearables
      tags:
        - Lambdas
      description: Search for wearables based on the applied filters and retrieve detailed information
      parameters:
        - in: query
          name: collectionId
          schema:
            type: array
            items:
              type: string
              example: urn:decentraland:ethereum:collections-v1:mf_sammichgamer
          description: Lis of URNs that identify the collection. Maximum amount of ids allowed is 500.
        - in: query
          name: wearableId
          schema:
            type: array
            items:
              type: string
              example: urn:decentraland:ethereum:collections-v1:binance_us_collection:binance_us_hat
          description: List of wearables URNs to search. Maximum amount of ids allowed is 500.
        - in: query
          name: textSearch
          schema:
            type: string
            example: Hoodie
          description: Search text
        - in: query
          name: limit
          schema:
            type: integer
            example: 2
          description: Limit the quantity of results that will be returned by the request. You can only request up to 500 results.
        - in: query
          name: lastId
          schema:
            type: string
            example: urn:decentraland:ethereum:collections-v1:binance_us_collection:binance_us_hat
          description: The result will always be ordered by the local timestamp fields but in case of timestamp collisions, you can use the lastId field to filter the result
      responses:
        '200':
          description: Catalyst services health information
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/wearables'
              examples:
                default:
                  $ref: '#/components/examples/200-wearables'
        '400':
          description: Bad Request
          content:
            application/json; charset=utf-8:
              schema:
                type: string
              examples:
                MissingFilter:
                  summary: Missing Filter
                  value: 'You must use one of the filters: ''textSearch'', ''collectionId'' or ''wearableId'''
                TextSearch:
                  summary: Bad search text
                  value: The text search must be at least 3 characters long
                Limit:
                  summary: Too many wearables requested
                  value: You can't ask for more than 500 wearables
                Collection:
                  summary: Too many items in the collection
                  value: You can't filter for more than 500 collection ids
  /lambdas/contracts/servers:
    get:
      operationId: getCatalystServers
      summary: Get Catalyst Servers
      tags:
        - Lambdas
      description: Retrieve the list of Catalyst Servers
      responses:
        '200':
          description: List of Catalyst Servers
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/servers'
              examples:
                default:
                  $ref: '#/components/examples/200-servers'
  /lambdas/contracts/pois:
    get:
      operationId: getPois
      summary: Retrieve DCL Point of Interests
      tags:
        - Lambdas
      description: Retrieve the Point of Interest list of coordinates
      responses:
        '200':
          description: List of Point of Interest coordinates. These are currently highlighted in the DCL Atlas.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/pois'
              examples:
                default:
                  $ref: '#/components/examples/200-pois'
  /lambdas/contracts/denylisted-names:
    get:
      operationId: getDenylistedUserNames
      summary: Denylisted user names
      tags:
        - Lambdas
      description: Retrieve list of forbidden user names. The prohibition of these names is decided through the DAO and need to be voted, the list lives in a Smart Contract and the Catalyst just consumes this information to present it to the client. In order to add a new name a new proposal needs to be created, approved and a transaction should be sent by a DAO committee member.
      responses:
        '200':
          description: Array of forbidden names by the DAO
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/denylisted-usernames'
              examples:
                default:
                  $ref: '#/components/examples/200-denylisted-usernames'
  /lambdas/crypto/validate-signature:
    post:
      deprecated: true
      operationId: validateSignature
      summary: Validate signed message
      tags:
        - Lambdas
      description: Given a signed message and it's AuthChain, validate it's authenticity. A message can be signed, for example, to prove ownership of the Entity pointers that they want to modify.
      requestBody:
        description: 'The body has 3 properties. The timestamp, the signedMessage that you wish to validate and the AuthChain. <br/>The structure of the AuthChain is described as follows: <br/>- The first element of the chain is the original signer, and the one who will be used to validate against the blockchain <br/>- The last element of the chain contains the EHash and a signature <br/>- In between are ephemeral keys that can be used for signing'
        content:
          application/json; charset=utf-8:
            schema:
              type: object
            examples:
              default:
                $ref: '#/components/examples/body-validate-signature'
      responses:
        '200':
          description: Result of the signature validation with owner address or errors
          content:
            application/json:
              schema:
                type: object
              examples:
                valid-signature:
                  $ref: '#/components/examples/200-validate-signature-true'
                invalid-key:
                  $ref: '#/components/examples/200-validate-signature-false'
        '400':
          description: 'Bad Request: Expected ''signedMessage'' property to be set'
  /lambdas/explore/hot-scenes:
    get:
      operationId: getHotScenes
      summary: Hot Scenes
      tags:
        - Lambdas
      description: Returns the list of scenes where there are more users with coordinates and the list of parcels that compose the scene.
      responses:
        '200':
          description: List of scenes
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/hot-scenes'
              examples:
                default:
                  $ref: '#/components/examples/200-hot-scenes'
  /lambdas/explore/realms:
    get:
      operationId: getRealms
      summary: Get Realms status
      tags:
        - Lambdas
      description: Returns the list of realms with details about the users in it
      responses:
        '200':
          description: List of the current state of the realms. The userParcels array is the list of parcels in which there are users present.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/realms'
              examples:
                default:
                  $ref: '#/components/examples/200-realms'
  /lambdas/parcels/{x}/{y}/operators:
    get:
      operationId: getParcelOperators
      summary: Get the operators for a parcel
      tags:
        - Lambdas
      description: Get the operators for a parcel
      parameters:
        - in: path
          name: x
          required: true
          schema:
            type: string
            example: '100'
          description: X coordinate of the parcel
        - in: path
          name: 'y'
          required: true
          schema:
            type: string
            example: '100'
          description: Y coordinate of the parcel
      responses:
        '200':
          description: operators for a parcel
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/parcel-operators'
              examples:
                default:
                  $ref: '#/components/examples/200-parcel-operators'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                invalid-coordinates:
                  value:
                    error: Coordinates X and Y must be valid numbers in a valid range
                  summary: Invalid coordinate format or range
  /lambdas/profiles:
    post:
      operationId: getAvatarsDetailsByPost
      summary: Get Avatars details
      tags:
        - Lambdas
      description: Returns all the Avatars details associated with the Ethereum addresses in the body
      requestBody:
        description: The body only has the `ids` property representing a list of Ethereum addresses
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/post-profiles'
            examples:
              default:
                $ref: '#/components/examples/post-profiles'
      responses:
        '200':
          description: Array of Avatars
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/profile'
              examples:
                default:
                  $ref: '#/components/examples/200-profiles-ids'
        '304':
          description: No profile was modified since `If-Modified-Since` header
  /lambdas/profiles/{id}:
    get:
      operationId: getAvatarDetails
      summary: Get Avatar details
      tags:
        - Lambdas
      description: Given a Ethereum address of a user, return the Avatars details associated with it.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            example: '0x22480812a9a0669783c06d359182a583bd1d9fc2'
          description: Ethereum address of the user
      responses:
        '200':
          description: Array of Avatars
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profile'
              examples:
                default:
                  $ref: '#/components/examples/200-profiles-id'
  /lambdas/outfits/{id}:
    get:
      operationId: getOutfits
      summary: Get Outfits
      tags:
        - Lambdas
      description: Given a Ethereum address of a user, return the Outfits entity.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            example: '0x22480812a9a0669783c06d359182a583bd1d9fc2'
          description: Ethereum address of the user
      responses:
        '200':
          description: Outfits entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entity'
              examples:
                default:
                  $ref: '#/components/examples/200-outfits-id'
  /lambdas/third-party-integrations:
    get:
      operationId: getThirdPartyIntegrations
      summary: Returns the list of third party integrations as well as collections
      tags:
        - Lambdas
      description: Returns the list of third party integrations and collections
      responses:
        '200':
          description: Returns the list of third party integrations and collections
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/third-party-integrations'
              examples:
                default:
                  $ref: '#/components/examples/200-third-party-integrations'
  /comms/islands:
    get:
      operationId: getIslands
      summary: List of islands
      tags:
        - Archipelago
      description: Retrieves the list of communication islands in the server with details about the peers present in each island.
      responses:
        '200':
          description: List of Islands
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/islands'
              examples:
                default:
                  $ref: '#/components/examples/200-islands'
  /comms/islands/{islandId}:
    get:
      operationId: getIsland
      summary: Island Details
      tags:
        - Archipelago
      description: Retrieve information about the specified islandId
      parameters:
        - in: path
          name: islandId
          required: true
          schema:
            type: string
            example: I5n
          description: ID of the Island. You can search for the list of islands using the /comms/islands endpoint.
      responses:
        '200':
          description: Island details
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/islandId'
              examples:
                default:
                  $ref: '#/components/examples/200-islandId'
  /comms/peers:
    get:
      operationId: getPeers
      summary: List of peers
      tags:
        - Archipelago
      description: Retrieves the list peers in the server with details about their positions and islands.
      responses:
        '200':
          description: List of Peers
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/peers'
              examples:
                ok:
                  $ref: '#/components/examples/peers-ok'
components:
  schemas:
    about:
      type: object
      required:
        - healthy
        - acceptingUsers
        - configurations
        - content
        - lambdas
      properties:
        healthy:
          type: boolean
        acceptingUsers:
          type: boolean
        configurations:
          type: object
          required:
            - networkId
            - globalScenesUrn
            - scenesUrn
          properties:
            realmName:
              type: string
            networkId:
              type: number
            globalScenesUrn:
              type: array
              items:
                type: string
            scenesUrn:
              type: array
              items:
                type: string
            minimap:
              deprecated: true
              type: object
              required:
                - enabled
              properties:
                enabled:
                  type: boolean
                dataImage:
                  type: string
                estateImage:
                  type: string
            map:
              type: object
              required:
                - sizes
                - minimapEnabled
              properties:
                minimapEnabled:
                  type: boolean
                sizes:
                  type: array
                  items:
                    type: object
                    properties:
                      top:
                        type: number
                      left:
                        type: number
                      bottom:
                        type: number
                      right:
                        type: number
                parcelView:
                  type: object
                  required:
                    - version
                  properties:
                    version:
                      type: string
                    imageUrl:
                      type: string
                satelliteView:
                  type: object
                  required:
                    - version
                  properties:
                    version:
                      type: string
                    baseUrl:
                      type: string
                    suffixUrl:
                      type: string
                    topLeftOffset:
                      type: object
                      properties:
                        x:
                          type: number
                        'y':
                          type: number
                thumbnailView:
                  type: object
                  required:
                    - version
                  properties:
                    version:
                      type: string
                    baseUrl:
                      type: string
                    suffixUrl:
                      type: string
                    topLeftOffset:
                      type: object
                      properties:
                        x:
                          type: number
                        'y':
                          type: number
            skybox:
              type: object
              properties:
                fixedHour:
                  type: number
                textures:
                  type: array
                  items:
                    type: string
        content:
          type: object
          required:
            - healthy
            - publicUrl
            - synchronizationStatus
          properties:
            synchronizationStatus:
              type: string
            healthy:
              type: boolean
            commitHash:
              type: string
            version:
              type: string
            publicUrl:
              type: string
        comms:
          type: object
          required:
            - healthy
            - protocol
          properties:
            healthy:
              type: boolean
            protocol:
              type: string
            commitHash:
              type: string
            version:
              type: string
            usersCount:
              type: number
            adapter:
              type: string
        lambdas:
          type: object
          required:
            - healthy
            - publicUrl
          properties:
            healthy:
              type: boolean
            commitHash:
              type: string
            version:
              type: string
            publicUrl:
              type: string
        bff:
          type: object
          required:
            - healthy
            - publicUrl
            - protocolVersion
          properties:
            healthy:
              type: boolean
            commitHash:
              type: string
            userCount:
              type: number
            publicUrl:
              type: string
            protocolVersion:
              type: string
    stats-parcels:
      type: object
      properties:
        parcels:
          type: array
          items:
            type: object
            properties:
              peersCount:
                type: number
              parcel:
                type: object
                properties:
                  x:
                    type: number
                  'y':
                    type: number
    auth-chain:
      type: array
      items:
        required:
          - type
          - payload
        type: object
        properties:
          type:
            type: string
          payload:
            type: string
          signature:
            type: string
    audit-response:
      required:
        - version
        - localTimestamp
        - authChain
      type: object
      properties:
        version:
          type: string
        localTimestamp:
          type: number
        authChain:
          $ref: '#/components/schemas/auth-chain'
        overwrittenBy:
          type: string
        isDenylisted:
          type: boolean
        denylistedContent:
          type: array
          items:
            type: string
    error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
    available-content:
      type: array
      items:
        required:
          - cid
          - available
        type: object
        properties:
          cid:
            type: string
          available:
            type: boolean
    errors:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: string
    entity:
      required:
        - version
        - id
        - type
        - timestamp
        - pointers
        - content
      type: object
      properties:
        version:
          type: string
        id:
          type: string
        type:
          type: string
        timestamp:
          type: number
        pointers:
          type: array
          items:
            type: string
        content:
          type: array
          items:
            type: object
            required:
              - file
              - hash
            properties:
              file:
                type: string
              hash:
                type: string
        metadata:
          type: object
    failed-deployments:
      type: array
      items:
        required:
          - entityType
          - entityId
          - reason
          - errorDescription
        type: object
        properties:
          failedDeploymentsRepo:
            type: string
          entityType:
            type: string
          entityId:
            type: string
          reason:
            type: string
          errorDescription:
            type: string
    pointer-changes:
      required:
        - deltas
      type: object
      properties:
        deltas:
          type: array
          items:
            required:
              - entityType
              - entityId
              - localTimestamp
              - pointers
              - authChain
            type: object
            properties:
              entityType:
                type: string
              entityId:
                type: string
              localTimestamp:
                type: number
              pointers:
                type: array
                items:
                  type: string
              authChain:
                $ref: '#/components/schemas/auth-chain'
    snapshots:
      type: array
      items:
        required:
          - hash
          - timeRange
          - numberOfEntities
          - generationTimestamp
        type: object
        properties:
          hash:
            type: string
          timeRange:
            required:
              - initTimestamp
              - endTimestamp
            type: object
            properties:
              initTimestamp:
                type: number
              endTimestamp:
                type: number
          replacedSnapshotHashes:
            type: array
            items:
              type: string
          numberOfEntities:
            type: number
          generationTimestamp:
            type: number
    status-content:
      required:
        - version
        - synchronizationStatus
        - commitHash
        - ethNetwork
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        currentTime:
          type: number
        lastImmutableTime:
          type: number
        historySize:
          type: number
        synchronizationStatus:
          required:
            - lastSyncWithDAO
            - synchronizationState
          type: object
          properties:
            otherServers:
              type: array
              items:
                required:
                  - address
                  - connectionState
                  - lastDeploymentTimestamp
                type: object
                properties:
                  address:
                    type: string
                  connectionState:
                    type: string
                  lastDeploymentTimestamp:
                    type: number
            lastSyncWithDAO:
              type: number
            synchronizationState:
              type: string
            lastSyncWithOtherServers:
              type: number
        commitHash:
          type: string
        ethNetwork:
          type: string
    status-lambdas:
      type: object
      properties:
        version:
          type: string
        currentTime:
          type: number
        commitHash:
          type: string
    erc721:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        language:
          type: string
        image:
          type: string
        thumbnail:
          type: string
        attributes:
          type: array
          items:
            type: object
            properties:
              trait_type:
                type: string
              value:
                type: string
    wearable:
      type: object
      required:
        - urn
        - name
        - rarity
        - category
      properties:
        urn:
          type: string
        amount:
          type: number
        name:
          type: string
        rarity:
          type: string
        category:
          type: string
        entity:
          $ref: '#/components/schemas/entity'
        individualData:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              tokenId:
                type: string
              transferredAt:
                type: string
              price:
                type: string
    lambdas-error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
        message:
          type: string
    emote:
      type: object
      required:
        - urn
        - name
        - category
      properties:
        urn:
          type: string
        amount:
          type: number
        category:
          type: string
        entity:
          $ref: '#/components/schemas/entity'
    names-paginated:
      type: object
      required:
        - elements
        - totalAmount
        - pageNum
        - pageSize
      properties:
        elements:
          type: array
          items:
            type: object
            required:
              - name
              - contractAddress
              - tokenId
            properties:
              name:
                type: string
              contractAddress:
                type: string
              tokenId:
                type: string
              price:
                type: string
        totalAmount:
          type: number
        pageNum:
          type: number
        pageSize:
          type: number
    lands-paginated:
      type: object
      required:
        - elements
        - totalAmount
        - pageNum
        - pageSize
      properties:
        elements:
          type: array
          items:
            type: object
            required:
              - contractAddress
              - tokenId
              - category
            properties:
              name:
                type: string
              contractAddress:
                type: string
              tokenId:
                type: string
              price:
                type: string
              category:
                type: string
              x:
                type: string
              'y':
                type: string
              image:
                type: string
              description:
                type: string
        totalAmount:
          type: number
        pageNum:
          type: number
        pageSize:
          type: number
    parcel-permissions:
      type: object
      required:
        - address
        - operator
        - updateOperator
        - updateManager
        - approvedForAll
      properties:
        address:
          type: boolean
        operator:
          type: boolean
        updateOperator:
          type: boolean
        updateManager:
          type: boolean
        approvedForAll:
          type: boolean
    third-party-wearable:
      type: object
      required:
        - urn
        - name
        - category
        - entity
      properties:
        urn:
          type: string
        amount:
          type: number
        name:
          type: string
        category:
          type: string
        entity:
          $ref: '#/components/schemas/entity'
        individualData:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
    wearables:
      type: object
      properties:
        wearables:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              description:
                type: string
              image:
                type: string
              thumbnail:
                type: string
              collectionAddress:
                type: string
              rarity:
                type: string
              data:
                type: object
                properties:
                  replaces:
                    type: array
                    items:
                      type: string
                  hides:
                    type: array
                    items:
                      type: string
                  tags:
                    type: array
                    items:
                      type: string
                  category:
                    type: string
                  representations:
                    type: array
                    items:
                      type: object
                      properties:
                        bodyShapes:
                          type: array
                          items:
                            type: string
                        mainFile:
                          type: string
                        overrideReplaces:
                          type: array
                          items:
                            type: object
                        overrideHides:
                          type: array
                          items:
                            type: object
                        contents:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              url:
                                type: string
              i18n:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: string
                    text:
                      type: string
              createdAt:
                type: number
              updatedAt:
                type: number
        filters:
          type: object
          properties:
            textSearch:
              type: string
        pagination:
          type: object
          properties:
            limit:
              type: number
            next:
              type: string
    servers:
      type: array
      items:
        type: object
        required:
          - baseUrl
          - owner
          - id
        properties:
          baseUrl:
            type: string
          owner:
            type: string
          id:
            type: string
    pois:
      type: array
      items:
        type: string
    denylisted-usernames:
      type: array
      items:
        type: string
    hot-scenes:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          baseCoords:
            type: array
            items:
              type: number
          usersTotalCount:
            type: number
          parcels:
            type: array
            items:
              type: array
              items:
                type: number
          thumbnail:
            type: string
          creator:
            type: string
          description:
            type: string
          realms:
            type: array
            items:
              type: object
              properties:
                serverName:
                  type: string
                url:
                  type: string
                layer:
                  type: string
                usersCount:
                  type: number
                maxUsers:
                  type: number
                userParcels:
                  type: array
                  items:
                    type: array
                    items:
                      type: number
    realms:
      type: array
      items:
        type: object
        properties:
          serverName:
            type: string
          url:
            type: string
          layer:
            type: string
          usersCount:
            type: number
          maxUsers:
            type: number
          userParcels:
            type: array
            items:
              type: array
              items:
                type: number
    parcel-operators:
      type: object
      required:
        - address
        - operator
        - updateOperator
        - updateManagers
        - approvedForAll
      properties:
        address:
          type: string
        operator:
          type: string
          nullable: true
        updateOperator:
          type: string
          nullable: true
        updateManagers:
          type: array
          items:
            type: string
        approvedForAll:
          type: array
          items:
            type: string
    post-profiles:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
    profile:
      type: object
      properties:
        avatars:
          type: array
          items:
            type: object
            properties:
              userId:
                type: string
              email:
                type: string
              name:
                type: string
              hasClaimedName:
                type: boolean
              description:
                type: string
              ethAddress:
                type: string
              version:
                type: number
              avatar:
                type: object
                properties:
                  bodyShape:
                    type: string
                  snapshots:
                    type: object
                    properties:
                      face:
                        type: string
                      face128:
                        type: string
                      face256:
                        type: string
                      body:
                        type: string
                  eyes:
                    type: object
                    properties:
                      color:
                        type: object
                        properties:
                          r:
                            type: number
                          g:
                            type: number
                          b:
                            type: number
                          a:
                            type: number
                  hair:
                    type: object
                    properties:
                      color:
                        type: object
                        properties:
                          r:
                            type: number
                          g:
                            type: number
                          b:
                            type: number
                          a:
                            type: number
                  skin:
                    type: object
                    properties:
                      color:
                        type: object
                        properties:
                          r:
                            type: number
                          g:
                            type: number
                          b:
                            type: number
                          a:
                            type: number
                  wearables:
                    type: array
                    items:
                      type: string
              tutorialStep:
                type: number
              interests:
                type: array
                items:
                  type: string
              unclaimedName:
                type: string
    third-party-integrations:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            type: object
            required:
              - urn
            properties:
              urn:
                type: string
              name:
                type: string
              description:
                type: string
    islands:
      type: object
      properties:
        ok:
          type: boolean
        islands:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              peers:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    address:
                      type: string
                    parcel:
                      type: array
                      items:
                        type: number
                    position:
                      type: array
                      items:
                        type: number
                    lastPing:
                      type: number
                    preferedIslandId:
                      type: string
              maxPeers:
                type: number
              center:
                type: array
                items:
                  type: number
              radius:
                type: number
    islandId:
      type: object
      properties:
        id:
          type: string
        peers:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              address:
                type: string
              parcel:
                type: array
                items:
                  type: number
              position:
                type: array
                items:
                  type: number
              lastPing:
                type: number
              preferedIslandId:
                type: string
        maxPeers:
          type: number
        center:
          type: array
          items:
            type: number
        radius:
          type: number
    peers:
      type: object
      properties:
        ok:
          type: boolean
        peers:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              address:
                type: string
              parcel:
                type: array
                items:
                  type: number
              position:
                type: array
                items:
                  type: number
              lastPing:
                type: number
  examples:
    200-about:
      value:
        healthy: true
        configurations:
          realmName: zeus
          map:
            minimapEnabled: true
            sizes:
              - left: -150
                top: 150
                right: 150
                bottom: -150
              - left: 62
                top: 158
                right: 162
                bottom: 151
              - left: 151
                top: 150
                right: 163
                bottom: 59
            satelliteView:
              version: v1
              baseUrl: https://genesis.city/map/latest
              suffixUrl: .jpg
              topLeftOffset:
                x: -2
                'y': -6
            parcelView:
              version: v1
              imageUrl: https://api.decentraland.org/v1/minimap.png
        content:
          healthy: true
          commitHash: 58bc402b1b8f0a407a9d66a5ea58b33dd141af5f
          version: 4.8.0
        comms:
          healthy: true
          protocol: v3
          commitHash: 70bc402b1b8f0a407a9d66a5ea58b33dd141af5f
        lambdas:
          healthy: true
          commitHash: 18bc402b1b8f0a407a9d66a5ea58b33dd141af5f
          version: 4.8.0
        bff:
          usersCount: 51
          healthy: true
          commitHash: 80bc402b1b8f0a407a9d66a5ea58b33dd141af5f
    503-about:
      value:
        healthy: false
        configurations:
          realmName: zeus
        content:
          healthy: false
          commitHash: 58bc402b1b8f0a407a9d66a5ea58b33dd141af5f
          version: 4.8.0
        comms:
          healthy: true
          protocol: v3
          commitHash: 70bc402b1b8f0a407a9d66a5ea58b33dd141af5f
        lambdas:
          healthy: true
          commitHash: 18bc402b1b8f0a407a9d66a5ea58b33dd141af5f
          version: 4.8.0
        bff:
          usersCount: 51
          healthy: true
          commitHash: 80bc402b1b8f0a407a9d66a5ea58b33dd141af5f
    200-stats-parcels:
      value:
        parcels:
          - peersCount: 100
            parcel:
              x: -100
              'y': 127
          - peersCount: 43
            parcel:
              x: 12
              'y': 1
    200-audit-response:
      value:
        version: v3
        localTimestamp: 1628271052660
        authChain:
          - type: SIGNER
            payload: '0x6B9d61D2AF37F0661dc3c3492fF74a6b13d13B86'
            signature: ''
          - type: ECDSA_EPHEMERAL
            payload: |-
              Decentraland Login
              Ephemeral address: 0x422AF1a8705Caa58E16F21E7ECA64C8B868118Ca
              Expiration: 2021-08-13T11:30:32.697Z
            signature: '0x35a35fa65783f963bab9faa73035eedef019b783394d414df583ab0b89d859444168e985b0d71ff6c7fca57e77c0b609bb48c83ca997687d6072abe70f7e99ed1b'
          - type: ECDSA_SIGNED_ENTITY
            payload: QmQgezF4UWTZpD5VqKs2AGCzucRJdm8zU87MxdSRH9heZR
            signature: '0x085e17af656af3f60ee2cc98de99e458949b58cd5c5aa417f2cdb1f17cd1dde0370a719dc8385345969a9ee0c642d19b3650bc1076be593c59eb97f38ee0b2be1c'
    200-available-content:
      value:
        - cid: QmWFLwHGfvhB9a1epaRpS38HEwbHvhpaYzHEsNhDRgon7P
          available: true
        - cid: MfWFLwHGfvhB9a1epaRpJ38HEwbHvhpaYzHEsNhDRgon8H
          available: false
    200-active-collections:
      value:
        - pointer: urn:decentraland:polygon:collections-thirdparty:cryptohats:0xc04528c14c8ffd84c7c1fb6719b4a89853035cdd
          entityId: QmeA8RpAtqU6gCebNaWRXtM9nQs3ugzzbeQm3L7uKrP4Jp
        - pointer: urn:decentraland:polygon:collections-thirdparty:cryptohats:0xabcdefghijk
          entityId: QmdajbrYt4pdkkW2R2PcZ8iLz55uzgGceo4hJMCirHEpPK
        - pointer: urn:decentraland:polygon:collections-thirdparty:cryptohats:0xlmnopqrst
          entityId: QmXokfUunNwLY9hw7U9x2Q3NJ7VFXt65rVDRGzFzPzEXvX
    200-entities-active:
      value:
        - version: v3
          id: QmQ9UorFsVTpaVpCwJZAzFyCmaGf7Ksi6aQHYTJVKyzVMh
          type: scene
          timestamp: 1581034082829
          pointers:
            - 100,0
          content:
            - file: Fork_0.glb
              hash: QmdnkhnMwaFWs5ysAQ4Y8r9CSYMoMvpiAcaLr1PJoQFbZU
            - file: game.js
              hash: QmXdgLxwgBRr3igNoJAu7Qi6KtMR6WR5kUSRtZVERnQH9A
            - file: OpenRoad_0.glb
              hash: QmRF2LA6AdTP8ZTsKpf6WGW8iZesfmKqMzYrg7Yx1nbLU9
            - file: scene.json
              hash: QmPgaz3kzicJKAtagqGHN5LYFvECimz4te5CVU9y4EbPgo
          metadata:
            display:
              title: Road at 100,0 (open road OpenRoad_0)
              favicon: favicon_asset
            contact:
              name: ''
              email: ''
            owner: ''
            scene:
              parcels:
                - 100,0
              base: 100,0
            communications:
              type: webrtc
              signalling: https://signalling-01.decentraland.org
            policy:
              contentRating: E
              fly: true
              voiceEnabled: true
              blacklist: []
              teleportPosition: ''
            main: game.js
            tags: []
    200-failed-deployments:
      value:
        - failedDeploymentsRepo: https://peer.dclnodes.io/content
          entityType: profile
          entityId: Qmej2ASCw4ubcjd2KHyMkcQz8HbMUfLqGbtheWoxykBt38
          reason: No entity or audit
          errorDescription: During sync, we couldn't fetch the entity or the audit info
    200-pointer-changes:
      value:
        deltas:
          - entityType: scene
            entityId: QmWBMqDmFebLr4pJWxBpXdtToqTNxqeefzkerQ1C35cGeb
            localTimestamp: 1628614712569
            pointers:
              - 0,0
              - 0,1
            authChain:
              - type: SIGNER
                payload: '0x5dB41e2b949a60D60Ae203CdAdabF1c0f0759985'
                signature: ''
          - entityType: scene
            entityId: QmT3EYh8cGtB8oHMEgCc5GuRMPofkHNwb936ZhRocwgrAL
            localTimestamp: 1628612595680
            pointers:
              - 1,1
              - 1,2
            authChain:
              - type: SIGNER
                payload: '0x5dB41e2b949a60D60Ae203CdAdabF1c0f0759985'
                signature: ''
          - entityType: scene
            entityId: QmQSBke1rXUtPYHLJvJdrfX85n68YMSRgb4KeGhNL8w8KL
            localTimestamp: 1628612397349
            pointers:
              - 3,3
            authChain:
              - type: SIGNER
                payload: '0x5dB41e2b949a60D60Ae203CdAdabF1c0f0759985'
                signature: ''
    200-snapshots:
      value:
        - hash: bafkreig6sfhegnp4okzecgx3v6gj6pohh5qzw6zjtrdqtggx64743rkmz4
          timeRange:
            initTimestamp: 1577836800000
            endTimestamp: 1606867200000
          replacedSnapshotHashes:
            - bafkreig6sfhegnp4okzecgx3v6gj6pohh5qzw6zjtrdqtggx64743rkmz4
          numberOfEntities: 0
          generationTimestamp: 1671126919124
        - hash: bafkreig6sfhegnp4okzecgx3v6gj6pohh5qzw6zjtrdqtggx64743rkmz4
          timeRange:
            initTimestamp: 1606867200000
            endTimestamp: 1635897600000
          replacedSnapshotHashes: []
          numberOfEntities: 0
          generationTimestamp: 1671126611185
    200-status-content:
      value:
        name: ''
        version: v3
        currentTime: 1628618042062
        lastImmutableTime: 0
        historySize: 968083
        synchronizationStatus:
          otherServers:
            - address: https://peer.dclnodes.io/content
              connectionState: Connected
              lastDeploymentTimestamp: 1628617995540
            - address: https://peer-wc1.decentraland.org/content
              connectionState: Connected
              lastDeploymentTimestamp: 1628617952275
            - address: https://peer-ec1.decentraland.org/content
              connectionState: Connected
              lastDeploymentTimestamp: 1628617951020
            - address: https://peer-eu1.decentraland.org/content
              connectionState: Connected
              lastDeploymentTimestamp: 1628617964042
            - address: https://peer.kyllian.me/content
              connectionState: Connected
              lastDeploymentTimestamp: 1628617996216
            - address: https://peer-ap1.decentraland.org/content
              connectionState: Connected
              lastDeploymentTimestamp: 1628617993064
            - address: https://peer.uadevops.com/content
              connectionState: Connected
              lastDeploymentTimestamp: 1628617962087
            - address: https://peer.melonwave.com/content
              connectionState: Connected
              lastDeploymentTimestamp: 1628617994238
            - address: https://interconnected.online/content
              connectionState: Connected
              lastDeploymentTimestamp: 1628617976603
            - address: https://peer.decentral.games/content
              connectionState: Connected
              lastDeploymentTimestamp: 1628617977558
          lastSyncWithDAO: 1628616434517
          synchronizationState: Synced
          lastSyncWithOtherServers: 1628617998093
        commitHash: 7890de4598f88a382863ea5f399b9cc17b80b42e
        catalystVersion: 1.3.3
        ethNetwork: mainnet
    200-status-lambdas:
      value:
        version: '1.0'
        currentTime: 1628875330839
        contentServerUrl: https://peer.decentraland.org/content/
        commitHash: 7890de4598f88a382863ea5f399b9cc17b80b42e
        catalystVersion: 1.3.3
    200-collections:
      value:
        collections:
          - id: urn:decentraland:off-chain:base-avatars
            name: Base Wearables
          - id: urn:decentraland:ethereum:collections-v1:3lau_basics
            name: dcl://3lau_basics
          - id: urn:decentraland:ethereum:collections-v1:atari_launch
            name: dcl://atari_launch
          - id: urn:decentraland:ethereum:collections-v1:binance_us_collection
            name: dcl://binance_us_collection
          - id: urn:decentraland:ethereum:collections-v1:china_flying
            name: dcl://china_flying
          - id: urn:decentraland:ethereum:collections-v1:community_contest
            name: dcl://community_contest
          - id: urn:decentraland:ethereum:collections-v1:cybermike_cybersoldier_set
            name: dcl://cybermike_cybersoldier_set
          - id: urn:decentraland:ethereum:collections-v1:cz_mercenary_mtz
            name: dcl://cz_mercenary_mtz
    200-erc721:
      value:
        id: urn:decentraland:matic:collections-v2:0x123db7844eaf7da11d88cf1754945bbd020742ef:3
        name: 4Skin Libre Upper Body
        description: DCL Wearable {emission}/100
        language: en-US
        image: https://peer.decentraland.org/content/contents/Qmbcs6tGSYtikJB3d5QEWP3uKD9XXnrUfsrYDzL3kVaAee
        thumbnail: https://peer.decentraland.org/content/contents/QmW1JmHYXZLRqpzTMmA6MZKi6AFNeYpWRGTqr7pgoyeG11
        attributes:
          - trait_type: Rarity
            value: legendary
          - trait_type: Category
            value: upper_body
          - trait_type: Body Shape
            value: BaseMale
          - trait_type: Body Shape
            value: BaseFemale
    200-wearables-paginated:
      value:
        elements:
          - urn: urn:decentraland:matic:collections-v2:0x6d83706836e820e79252edd48da419d2d03592d4:0
            individualData:
              - id: 0x6d83706836e820e79252edd48da419d2d03592d4-6407
                tokenId: '6407'
                transferredAt: '1662738697'
                price: '10000000000000000000000000'
              - id: 0x6d83706836e820e79252edd48da419d2d03592d4-5452
                tokenId: '5452'
                transferredAt: '1662738325'
                price: '10000000000000000000000000'
              - id: 0x6d83706836e820e79252edd48da419d2d03592d4-4497
                tokenId: '4497'
                transferredAt: '1662737945'
                price: '10000000000000000000000000'
              - id: 0x6d83706836e820e79252edd48da419d2d03592d4-3542
                tokenId: '3542'
                transferredAt: '1662737595'
                price: '10000000000000000000000000'
              - id: 0x6d83706836e820e79252edd48da419d2d03592d4-2587
                tokenId: '2587'
                transferredAt: '1662737239'
                price: '10000000000000000000000000'
              - id: 0x6d83706836e820e79252edd48da419d2d03592d4-1632
                tokenId: '1632'
                transferredAt: '1662736881'
                price: '10000000000000000000000000'
              - id: 0x6d83706836e820e79252edd48da419d2d03592d4-677
                tokenId: '677'
                transferredAt: '1662736515'
                price: '10000000000000000000000000'
            amount: 7
          - urn: urn:decentraland:matic:collections-v2:0x475abb52a7e925209b1334e52bfb62e1da9ebf62:1
            individualData:
              - id: 0x475abb52a7e925209b1334e52bfb62e1da9ebf62-105312291668557186697918027683670432318895095400549111254310977681
                tokenId: '105312291668557186697918027683670432318895095400549111254310977681'
                transferredAt: '1662040489'
                price: '1000000000000000000'
            amount: 1
          - urn: urn:decentraland:matic:collections-v2:0x710dce41dceace2f0e06c0cffee25fe65ad6f64c:0
            individualData:
              - id: 0x710dce41dceace2f0e06c0cffee25fe65ad6f64c-339
                tokenId: '339'
                transferredAt: '1662040423'
                price: '500000000000000000'
            amount: 1
          - urn: urn:decentraland:matic:collections-v2:0x293d1ae40b28c39d7b013d4a1fe3c5a8c016bf19:1
            individualData:
              - id: 0x293d1ae40b28c39d7b013d4a1fe3c5a8c016bf19-105312291668557186697918027683670432318895095400549111254310977722
                tokenId: '105312291668557186697918027683670432318895095400549111254310977722'
                transferredAt: '1662040329'
                price: '100000000000000000'
            amount: 1
        totalAmount: 23
        pageNum: '2'
        pageSize: '4'
    200-emotes-paginated:
      value:
        elements:
          - urn: urn:decentraland:matic:collections-v2:0xa5b27856547a7d7c238b0e6c2de7a73556b915ba:0
            amount: 1
          - urn: urn:decentraland:matic:collections-v2:0x7f26599ad1e9ad0ce6d47c5043d70d3bcd3d259a:0
            amount: 1
          - urn: urn:decentraland:matic:collections-v2:0xeed6bdbdec460e258688e15816e8a9f760c3651a:0
            amount: 1
          - urn: urn:decentraland:matic:collections-v2:0xa6c722476bdd17bf2adb65e96388345d83259f3b:0
            amount: 1
        totalAmount: 973
        pageNum: '3'
        pageSize: '4'
    200-names-paginated:
      value:
        names:
          - name: Gojo
            contractAddress: '0x2a187453064356c898cae034eaed119e1663acb8'
            tokenId: '115307283102801270656452808194409685445355100338904720773052040552422075323100'
            price: '25000000000000000000000'
          - name: Ugh
            contractAddress: '0x2a187453064356c898cae034eaed119e1663acb8'
            tokenId: '109851145768931514038649521124955142005672037705020471158837454870244371101640'
            price: '20000000000000000000000'
          - name: Pain
            contractAddress: '0x2a187453064356c898cae034eaed119e1663acb8'
            tokenId: '37860252415586502442474289153833538639704044038329376660459632788847982021683'
            price: '35000000000000000000000'
          - name: Hawks
            contractAddress: '0x2a187453064356c898cae034eaed119e1663acb8'
            tokenId: '61045570331711729163571591712822027676157304898474053802260900686360273563216'
            price: '30000000000000000000000'
        totalAmount: 812
        pageNum: '2'
        pageSize: '4'
    200-lands-paginated:
      value:
        lands:
          - name: No rules red light
            contractAddress: '0x959e104e1a4db6317fa58f8295f586e1a978c297'
            tokenId: '2178'
            category: estate
            description: No rules red light
            price: '13850000000000000000000'
            image: https://api.decentraland.org/v1/estates/2178/map.png
          - name: null
            contractAddress: '0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d'
            tokenId: '115792089237316195423570985008687907830471066081937686987411485309984659472358'
            category: parcel
            x: '-68'
            'y': '-26'
            price: null
            image: https://api.decentraland.org/v1/parcels/-68/-26/map.png
        totalAmount: 692
        pageNum: '1'
        pageSize: '2'
    200-parcel-permissions:
      value:
        address: true
        operator: false
        updateOperator: false
        updateManager: false
        approvedForAll: false
    200-wearables:
      value:
        wearables:
          - id: urn:decentraland:ethereum:collections-v1:binance_us_collection:binance_us_hat
            description: Binance US Hat
            image: https://peer.decentraland.org/content/contents/QmP6kMEf1yTUfNVYPXGTyErBH3Ao3CHHwcUBcqkMaAGspk
            thumbnail: https://peer.decentraland.org/content/contents/QmcDJvsm6muyZyeAN9S3znX2HHzuybyscDxCh4pBoJ4axh
            collectionAddress: '0xa8ee490e4c4da48cc1653502c1a77479d4d818de'
            rarity: uncommon
            data:
              replaces:
                - helmet
              hides:
                - hair
              tags:
                - binance
                - us
                - hat
                - decentraland
                - exclusive
              category: hat
              representations:
                - bodyShapes:
                    - urn:decentraland:off-chain:base-avatars:BaseMale
                  mainFile: M_BinanceUS_Hat.glb
                  overrideReplaces: []
                  overrideHides: []
                  contents:
                    - key: AvatarWearables_TX_2.png
                      url: https://peer.decentraland.org/content/contents/QmYktkLr5rnn9zPPARkavhVowvTNTih8uWq8BVscTGxtZD
                    - key: F_BinanceUS_Hat.glb
                      url: https://peer.decentraland.org/content/contents/QmQ1cK2KDyPYz4nF1j7kZPqztJmPkSiMP7dfSJP1cw8FPt
                    - key: M_BinanceUS_Hat.glb
                      url: https://peer.decentraland.org/content/contents/QmSM2L7vRbPPqVBy97pdxHPTr83EnWAywekg4Pd4HAATvv
                    - key: binance_hoddie.png
                      url: https://peer.decentraland.org/content/contents/QmcbRo8J4fkSuPjocgKEqyKZnkgqjZSVVd3URpmNkikfnc
                - bodyShapes:
                    - urn:decentraland:off-chain:base-avatars:BaseFemale
                  mainFile: F_BinanceUS_Hat.glb
                  overrideReplaces: []
                  overrideHides: []
                  contents:
                    - key: AvatarWearables_TX_2.png
                      url: https://peer.decentraland.org/content/contents/QmYktkLr5rnn9zPPARkavhVowvTNTih8uWq8BVscTGxtZD
                    - key: F_BinanceUS_Hat.glb
                      url: https://peer.decentraland.org/content/contents/QmQ1cK2KDyPYz4nF1j7kZPqztJmPkSiMP7dfSJP1cw8FPt
                    - key: M_BinanceUS_Hat.glb
                      url: https://peer.decentraland.org/content/contents/QmSM2L7vRbPPqVBy97pdxHPTr83EnWAywekg4Pd4HAATvv
                    - key: binance_hoddie.png
                      url: https://peer.decentraland.org/content/contents/QmcbRo8J4fkSuPjocgKEqyKZnkgqjZSVVd3URpmNkikfnc
            i18n:
              - code: en
                text: Binance US Hat
              - code: es
                text: Gorra de Binance US
            createdAt: 1617888339603
            updatedAt: 1617888339603
          - id: urn:decentraland:ethereum:collections-v1:community_contest:cw_bell_attendant_hat
            description: ''
            image: https://peer.decentraland.org/content/contents/QmfDGLvXyoD43iB2euMwqtxaRKKA1Y39BbmmpenCWKjw2n
            thumbnail: https://peer.decentraland.org/content/contents/Qmbs4UgxEhHwD8umiW3VWta8NBQy7mmBhxNgBRuNuE7pvw
            collectionAddress: '0x32b7495895264ac9d0b12d32afd435453458b1c6'
            rarity: legendary
            data:
              replaces:
                - helmet
                - tiara
                - top_head
              hides:
                - hair
              tags:
                - hat
                - exclusive
                - launch
                - 20.02.20
                - decentraland
                - community
                - wearables
                - exclusive
              category: hat
              representations:
                - bodyShapes:
                    - urn:decentraland:off-chain:base-avatars:BaseMale
                  mainFile: M_Hat_BellAttendant.glb
                  overrideReplaces: []
                  overrideHides: []
                  contents:
                    - key: AvatarWearables_Emissive_TX.png
                      url: https://peer.decentraland.org/content/contents/QmUrULH5u6RB6BjX9MQD97oi8djrvGvgqvNXq5ULXceZ6j
                    - key: AvatarWearables_TX.png
                      url: https://peer.decentraland.org/content/contents/QmXGZq67BhmGm8WpmXrSL8EqotM4nEs3CcP8e8fZE9dgWS
                    - key: AvatarWearables_TX_2.png
                      url: https://peer.decentraland.org/content/contents/QmYktkLr5rnn9zPPARkavhVowvTNTih8uWq8BVscTGxtZD
                    - key: F_Hat_BellAttendant.glb
                      url: https://peer.decentraland.org/content/contents/QmYJ8pS3hcF5RUu2G4F4gtrTaJEP6ZpKjPqUWfvAa3CBw8
                    - key: M_Hat_BellAttendant.glb
                      url: https://peer.decentraland.org/content/contents/QmTw9sRvB5WhbLwrvk8QGMJbTqhXsrucds64Qfgs6HYaHu
                - bodyShapes:
                    - urn:decentraland:off-chain:base-avatars:BaseFemale
                  mainFile: F_Hat_BellAttendant.glb
                  overrideReplaces: []
                  overrideHides: []
                  contents:
                    - key: AvatarWearables_Emissive_TX.png
                      url: https://peer.decentraland.org/content/contents/QmUrULH5u6RB6BjX9MQD97oi8djrvGvgqvNXq5ULXceZ6j
                    - key: AvatarWearables_TX.png
                      url: https://peer.decentraland.org/content/contents/QmXGZq67BhmGm8WpmXrSL8EqotM4nEs3CcP8e8fZE9dgWS
                    - key: AvatarWearables_TX_2.png
                      url: https://peer.decentraland.org/content/contents/QmYktkLr5rnn9zPPARkavhVowvTNTih8uWq8BVscTGxtZD
                    - key: F_Hat_BellAttendant.glb
                      url: https://peer.decentraland.org/content/contents/QmYJ8pS3hcF5RUu2G4F4gtrTaJEP6ZpKjPqUWfvAa3CBw8
                    - key: M_Hat_BellAttendant.glb
                      url: https://peer.decentraland.org/content/contents/QmTw9sRvB5WhbLwrvk8QGMJbTqhXsrucds64Qfgs6HYaHu
            i18n:
              - code: en
                text: Bell Attendant Hat
              - code: es
                text: Sombrero de Botones
            createdAt: 1618845343458
            updatedAt: 1618845343458
        filters:
          textSearch: hat
        pagination:
          limit: 2
          next: '?textSearch=hat&lastId=urn%3Adecentraland%3Aethereum%3Acollections-v1%3Acommunity_contest%3Acw_bell_attendant_hat&limit=2'
    200-servers:
      value:
        - baseUrl: https://interconnected.online
          owner: '0x75e1d32289679dfcB2F01fBc0e043B3d7F9Cd443'
          id: '0xa88ccc81441dd364f33f0db770508d63e6ce933e2a2f24039974c887e535e2cd'
        - baseUrl: https://peer.decentraland.org
          owner: '0xFE95E04A628087FCdD5f278E61F148B47471Af4A'
          id: '0xfb539741ce2cc5e843a1690c57d9a67a3a193f52df217b589b131e90b1130db0'
        - baseUrl: https://peer.melonwave.com
          owner: '0x6327Ef6bAE918584B86AcfD58bDEB6EF9211e371'
          id: '0xdc79f86d81f8be2e8ecf51f5be7df04edca3c815846f890c8b1bcade6bcf2a6c'
        - baseUrl: https://peer.kyllian.me
          owner: '0xF78Dfd2a940c1c204d9eb5D1fF7988b7AEC3F01a'
          id: '0x77fa03b44621846a18358ca6e766a5fa6959a1b25ae2229f16be328dac8931df'
        - baseUrl: https://peer.decentral.games
          owner: '0xa7C825BB8c2C4d18288af8efe38c8Bf75A1AAB51'
          id: '0x397114b887b57bb13bd50e35a31cf7b91aa62117a040cc029e4935749f595d26'
        - baseUrl: https://peer.uadevops.com
          owner: '0x3f95F857F89357fb1592C74dEd1f4556c6272edB'
          id: '0x242d013bc99da6593970d01f044f46194eee33b8947384efbafc10ae1a7917fc'
        - baseUrl: https://peer.dclnodes.io
          owner: '0x3d7C732f54f7D60d14eabca8A7Da3097cEc3AF1e'
          id: '0xd5d98a65db8d09437f138b06d112a630c762cca7082c96fa0dcd4102abfc0aef'
        - baseUrl: https://peer-eu1.decentraland.org
          owner: '0xEfc549434A03756F6e37A43757a2927605D8839B'
          id: '0x4e55ad26203dfef9b2235dfea39d531b2b64814e606c0294768c0d1469124479'
        - baseUrl: https://peer-ec1.decentraland.org
          owner: '0xe5d0c3fEA1e5F01CA4098e9580B93B3b5d0Ea768'
          id: '0x63edaad1a9bdfa5a492b12d4920655c5812c8572d1cdeca2f3f5e8cc49efc593'
        - baseUrl: https://peer-wc1.decentraland.org
          owner: '0x4eAC6325e1DBF1Ac90434d39766e164Dca71139E'
          id: '0xca6c9aff525af8ae6fb73c59c402619030323150b0dfcb39574c9eed608e7309'
        - baseUrl: https://peer-ap1.decentraland.org
          owner: '0xF1598bC1aD6474d6e884684706ABdd1e3468D199'
          id: '0x201a63dfe16e0e870f83367ac0ce1dd90b6e851f78baae140c81741e3f5fc9ec'
    200-pois:
      value:
        - '-29,55'
        - '-108,-30'
        - 144,-34
        - '-10,58'
        - '-79,-54'
        - 111,-23
        - 25,74
        - 26,9
        - '-143,-125'
        - '-25,25'
        - '-119,133'
        - '-48,-110'
        - 23,-123
        - 38,103
        - 82,-149
        - 52,83
        - 10,52
        - 19,-120
        - '-67,-114'
        - 22,-118
        - 46,-52
        - '-96,110'
        - '-108,129'
        - '-119,125'
        - 96,-30
        - '-1,-135'
        - '-23,69'
        - '-116,-49'
        - 95,-7
    200-denylisted-usernames:
      value:
        - OffensiveName1
        - OffensiveName2
        - OffensiveName3
    body-validate-signature:
      value:
        timestamp: '1629753096906'
        signedMessage: QmfSjDEi2a43aURjbNR3KTXmBB3wWfkJb6Vdmu3vmaNW5H
        authChain:
          - type: SIGNER
            payload: '0x716954738e57686a08902d9dd586e813490fee23'
          - type: ECDSA_EPHEMERAL
            payload: |-
              Decentraland Login
              Ephemeral address: 0x90a43461d3e970785B945FFe8f7628F2BC962D6a
              Expiration: 2021-07-10T20:55:42.215Z
            signature: '0xe64e46fdd7d8789c0debec54422ae77e31b77e5a28287e072998e1114e252c57328c17756400d321e9e77032347c9d05e63fb59a3b6c3ab754565f9db86b8c481b'
          - type: ECDSA_SIGNED_ENTITY
            payload: QmNMZBy7khBxdigikA8mcJMyv6yeBXfMv3iAcUiBr6n72C
            signature: '0xbed22719dcdc19580353108027c41c65863404879592c65014d806efa961c629777adc76986193eaee4e48f278ec59feb1c289827254230af85b2955157ec8061b'
    200-validate-signature-true:
      summary: Valid Signature
      value:
        valid: true
        ownerAddress: '0xa8ee490e4c4da48cc1653502c1a77479d4d818de'
    200-validate-signature-false:
      summary: Invalid Signature
      value:
        valid: false
        error: 'ERROR. Link type: ECDSA_EPHEMERAL. Ephemeral key expired. Expiration: 1625950542215. Test: 1630347919478.'
    200-hot-scenes:
      value:
        - id: QmT2pZZ5XX5LZ8KTy9ExRnBEcMZzcChfnAXyBafyRp4sdY
          name: WonderMine Crafting Game
          baseCoords:
            - -29
            - 55
          usersTotalCount: 107
          parcels:
            - - -29
              - 55
            - - -29
              - 56
          thumbnail: https://wonderzone.io/img/scenes/wondermine_thumb2.jpg
          creator: WonderZone
          description: Mine meteors, get loot, and craft wearables!
          realms:
            - serverName: loki
              url: https://interconnected.online
              layer: amber
              usersCount: 45
              maxUsers: 100
              userParcels:
                - - -27
                  - 57
                - - -27
                  - 60
    200-realms:
      value:
        - serverName: loki
          url: https://interconnected.online
          layer: blue
          usersCount: 66
          maxUsers: 100
          userParcels:
            - - -27
              - 58
        - serverName: unicorn
          url: https://peer.kyllian.me
          layer: blue
          usersCount: 62
          maxUsers: 100
          userParcels:
            - - -62
              - -13
            - - 87
              - -83
            - - 1
              - 0
            - - 133
              - 36
        - serverName: fenrir
          url: https://peer.decentraland.org
          layer: amber
          usersCount: 61
          maxUsers: 100
          userParcels:
            - - -68
              - 60
            - - 11
              - 139
    200-parcel-operators:
      value:
        address: '0xddf1eec586d8f8f0eb8c5a3bf51fb99379a55123'
        operator: '0xddf1eec586d8f8f0eb8c5a3bf51fb99379a55684'
        updateOperator: '0xddf1eec586d8f8f0eb8c5a3bf51fb99379a55684'
        updateManagers:
          - '0xddf1eec586d8f8f0eb8c5a3bf51fb99379a55684'
        approvedForAll:
          - '0xddf1eec586d8f8f0eb8c5a3bf51fb99379a55684'
    post-profiles:
      value:
        ids:
          - '0x5e5d9d1dfd87e9b8b069b8e5d708db92be5ade99'
          - '0x22480812a9a0669783c06d359182a583bd1d9fc2'
    200-profiles-ids:
      value:
        - avatars:
            - userId: '0x5e5d9d1dfd87e9b8b069b8e5d708db92be5ade99'
              email: ''
              name: Paralax24#de99
              hasClaimedName: false
              description: ''
              ethAddress: '0x5e5D9D1dfD87E9B8B069B8e5d708dB92bE5ADe99'
              version: 2
              avatar:
                bodyShape: urn:decentraland:off-chain:base-avatars:BaseMale
                snapshots:
                  face: https://peer.decentraland.org/content/contents/QmcYhp7gvmq8eLiLEUs9MbYFkAekaMfM23Y8YPhWGP7nYq
                  face128: https://peer.decentraland.org/content/contents/Qmc9FCM3HMGQpMbvyvkP6WweDGSxTL9Gxoyfsg6eAe8fyY
                  face256: https://peer.decentraland.org/content/contents/QmUKJme83AmeaKg6adRZQFDPkBSKbafRXwgCjL7vfHsoJJ
                  body: https://peer.decentraland.org/content/contents/QmY9Zoqg3Fngi9d3ALnt7PdLXVS8RrgcEaTsz9eBnCnvUB
                eyes:
                  color:
                    r: 0.22265625
                    g: 0.484375
                    b: 0.69140625
                hair:
                  color:
                    r: 0.98046875
                    g: 0.82421875
                    b: 0.5078125
                skin:
                  color:
                    r: 0.94921875
                    g: 0.76171875
                    b: 0.6484375
                wearables:
                  - urn:decentraland:off-chain:base-avatars:eyebrows_00
                  - urn:decentraland:off-chain:base-avatars:eyes_06
                  - urn:decentraland:off-chain:base-avatars:mouth_03
                  - urn:decentraland:off-chain:base-avatars:casual_hair_03
                  - urn:decentraland:off-chain:base-avatars:oxford_pants
                  - urn:decentraland:off-chain:base-avatars:black_jacket
                  - urn:decentraland:off-chain:base-avatars:m_feet_soccershoes
                  - urn:decentraland:off-chain:base-avatars:italian_director
                  - urn:decentraland:off-chain:base-avatars:lincoln_beard
              tutorialStep: 256
              interests: []
              unclaimedName: Paralax24
        - avatars:
            - userId: '0x22480812a9a0669783c06d359182a583bd1d9fc2'
              email: ''
              name: cestfini#9fc2
              hasClaimedName: false
              description: ''
              ethAddress: '0x22480812a9a0669783c06d359182a583bd1d9fc2'
              version: 2
              avatar:
                bodyShape: urn:decentraland:off-chain:base-avatars:BaseMale
                snapshots:
                  face: https://peer.decentraland.org/content/contents/QmeBEgsxrxTAEs9kFxgwyfJN8vUtqw8WJ4bthwhti3S9aL
                  face128: https://peer.decentraland.org/content/contents/QmVGRZxYmWL6z6JhkQtzo1KkWqdeZfxt6gzuCPY6nvbmhb
                  face256: https://peer.decentraland.org/content/contents/Qma7zpPZkwFDyCe1gj62nBYsYTmD2ZSSvxcQXZDmR1FTnC
                  body: https://peer.decentraland.org/content/contents/QmeqDMMK3KYSzuboKnPPtjG94bHCYtfCmHEeYRhpSBRuhn
                eyes:
                  color:
                    r: 0.37109375
                    g: 0.22265625
                    b: 0.1953125
                hair:
                  color:
                    r: 0.234375
                    g: 0.12890625
                    b: 0.04296875
                skin:
                  color:
                    r: 0.94921875
                    g: 0.76171875
                    b: 0.6484375
                wearables:
                  - urn:decentraland:off-chain:base-avatars:hair_coolshortstyle
                  - urn:decentraland:off-chain:base-avatars:eyebrows_05
                  - urn:decentraland:off-chain:base-avatars:eyes_08
                  - urn:decentraland:off-chain:base-avatars:mouth_01
                  - urn:decentraland:off-chain:base-avatars:full_beard
                  - urn:decentraland:off-chain:base-avatars:red_square_shirt
                  - urn:decentraland:off-chain:base-avatars:hip_hop_joggers
                  - urn:decentraland:off-chain:base-avatars:m_mountainshoes.glb
                  - urn:decentraland:off-chain:base-avatars:thug_life
              tutorialStep: 384
              interests: []
              unclaimedName: cestfini
    200-profiles-id:
      value:
        avatars:
          - userId: '0x22480812a9a0669783c06d359182a583bd1d9fc2'
            email: ''
            name: cestfini#9fc2
            hasClaimedName: false
            description: ''
            ethAddress: '0x22480812a9a0669783c06d359182a583bd1d9fc2'
            version: 2
            avatar:
              bodyShape: urn:decentraland:off-chain:base-avatars:BaseMale
              snapshots:
                face: https://peer.decentraland.org/content/contents/QmeBEgsxrxTAEs9kFxgwyfJN8vUtqw8WJ4bthwhti3S9aL
                face128: https://peer.decentraland.org/content/contents/QmVGRZxYmWL6z6JhkQtzo1KkWqdeZfxt6gzuCPY6nvbmhb
                face256: https://peer.decentraland.org/content/contents/Qma7zpPZkwFDyCe1gj62nBYsYTmD2ZSSvxcQXZDmR1FTnC
                body: https://peer.decentraland.org/content/contents/QmeqDMMK3KYSzuboKnPPtjG94bHCYtfCmHEeYRhpSBRuhn
              eyes:
                color:
                  r: 0.37109375
                  g: 0.22265625
                  b: 0.1953125
              hair:
                color:
                  r: 0.234375
                  g: 0.12890625
                  b: 0.04296875
              skin:
                color:
                  r: 0.94921875
                  g: 0.76171875
                  b: 0.6484375
              wearables:
                - urn:decentraland:off-chain:base-avatars:hair_coolshortstyle
                - urn:decentraland:off-chain:base-avatars:eyebrows_05
                - urn:decentraland:off-chain:base-avatars:eyes_08
                - urn:decentraland:off-chain:base-avatars:mouth_01
                - urn:decentraland:off-chain:base-avatars:full_beard
                - urn:decentraland:off-chain:base-avatars:red_square_shirt
                - urn:decentraland:off-chain:base-avatars:hip_hop_joggers
                - urn:decentraland:off-chain:base-avatars:m_mountainshoes.glb
                - urn:decentraland:off-chain:base-avatars:thug_life
            tutorialStep: 384
            interests: []
            unclaimedName: cestfini
    200-outfits-id:
      value:
        - version: v3
          id: QmQ9UorFsVTpaVpCwJZAzFyCmaGf7Ksi6aQHYTJVKyzVMh
          type: outfits
          timestamp: 1581034082829
          pointers:
            - 0xa87d168717538e86d71ac48baccaeb84162de602:outfits
          content: []
          metadata:
            outfits:
              - slot: 1
                outfit:
                  bodyShape: urn:decentraland:off-chain:base-avatars:BaseMale
                  eyes:
                    color:
                      r: 0.23046875
                      g: 0.625
                      b: 0.3125
                  hair:
                    color:
                      r: 0.35546875
                      g: 0.19140625
                      b: 0.05859375
                  skin:
                    color:
                      r: 0.94921875
                      g: 0.76171875
                      b: 0.6484375
                  wearables:
                    - 'urn:decentraland:matic:collections-v2: 0xf6f601efee04e74cecac02c8c5bdc8cc0fc1c721:0'
                    - 'urn:decentraland:matic:collections-v2: 0x04e7f74e73e951c61edd80910e46c3fece5ebe80:2'
                    - urn:decentraland:ethereum:collections-v1:rtfkt_x_atari:p_rtfkt_x_atari_feet
              - slot: 5
                outfit:
                  bodyShape: urn:decentraland:off-chain:base-avatars:BaseMale
                  eyes:
                    color:
                      r: 0.23046875
                      g: 0.625
                      b: 0.3125
                  hair:
                    color:
                      r: 0.35546875
                      g: 0.19140625
                      b: 0.05859375
                  skin:
                    color:
                      r: 0.94921875
                      g: 0.76171875
                      b: 0.6484375
                  wearables:
                    - 'urn:decentraland:matic:collections-v2: 0xf6f601efee04e74cecac02c8c5bdc8cc0fc1c721:0'
                    - 'urn:decentraland:matic:collections-v2: 0x04e7f74e73e951c61edd80910e46c3fece5ebe80:2'
                    - urn:decentraland:ethereum:collections-v1:rtfkt_x_atari:p_rtfkt_x_atari_feet
            namesForExtraSlots:
              - perro
    200-third-party-integrations:
      value:
        data:
          - urn: urn:decentraland:ethereum:ext:cryptopunks:0xContractAddressaaabbff999123
            name: Jean Pier
            description: Crypto punks (third party)
          - urn: urn:decentraland:matic:collections-v1:halloween
            name: Halloween hat
            description: Decentraland Halloween 2019
          - urn: urn:decentraland:matic:collections-v2:halloween
            name: Halloween tshirt
            description: Decentraland Halloween 2020
    200-islands:
      value:
        ok: true
        islands:
          - id: I5l
            peers:
              - id: 06f
                address: '0x5e5d9d1dfd87e9b8b069b8e5d708db92be5ade99'
                parcel:
                  - 0
                  - -1
                position:
                  - 12.69494342803955
                  - 104.27444005012512
                  - -5.611218452453613
                lastPing: 1629827670429
                preferedIslandId: Ilvs
              - id: 06g
                address: '0x5d543082dbc88ef48d6e4e10da466b4089011a97'
                parcel:
                  - 0
                  - -1
                position:
                  - 14.994168281555176
                  - 104.27944493293762
                  - -5.502110481262207
                lastPing: 1629827671509
                preferedIslandId: Ilvs
            maxPeers: 100
            center:
              - 13.844555854797363
              - 0
              - -5.55666446685791
            radius: 1.1509061078560505
    200-islandId:
      value:
        id: I5n
        peers:
          - id: 06h
            address: '0x5e5d9d1dfd87e9b8b069b8e5d708db92be5ade99'
            parcel:
              - 0
              - -1
            position:
              - 12.105399131774902
              - 104.28455662727356
              - -4.339361190795898
            lastPing: 1629828187587
            preferedIslandId: I5l
        maxPeers: 100
        center:
          - 12.105399131774902
          - 0
          - -4.339361190795898
        radius: 0
    peers-ok:
      value:
        ok: true
        peers:
          - id: 06h
            address: '0x5e5d9d1dfd87e9b8b069b8e5d708db92be5ade99'
            parcel:
              - 0
              - -1
            position:
              - 12.105399131774902
              - 104.28455662727356
              - -4.339361190795898
            lastPing: 1629828217833
          - id: 06i
            address: '0xe9bfcbe4ff64d03af9dfcf3fbd54dba58b4a4730'
            parcel:
              - 1
              - -1
            position:
              - 19.152772903442383
              - 104.28796696662903
              - -4.191743850708008
            lastPing: 1629828216857
